@page "/home/participant"
@using GroundZero.Web.Authentication
@using GroundZero.Web.Entities
@using Microsoft.AspNetCore.Authorization
@using SqlSugar

@attribute [Authorize]
@attribute [StreamRendering]

@inject ISqlSugarClient SqlSugar
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>GroundZero | Hackathons</PageTitle>

<div>
    <h5>Participating Hackathons</h5>
    <p>These are hackathons that you've registered in as a participant!</p>
</div>

<br/>

<div class="row row-cols-md-2 row-cols-lg-3">
    @foreach (var hackathon in Hackathons)
    {
        <div class="col">
            <HxCard CssClass="hx-hackathon-card">
                <BodyTemplate>
                    <HxBadge CssClass="mb-3" Color="ThemeColor.Success">Ongoing</HxBadge>
                    <HxCardTitle>@hackathon.Name</HxCardTitle>
                    <HxCardText>@hackathon.Description</HxCardText>
                    <HxButton Color="ThemeColor.Primary" Size="ButtonSize.Small" Outline="true">Open</HxButton>
                </BodyTemplate>
            </HxCard>
        </div>
    }
</div>

@code {

    private List<Hackathon> Hackathons { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        var userId = HttpContextAccessor.HttpContext!.User.GetUserId();

        Hackathons = await SqlSugar.Queryable<Participant>()
            .LeftJoin<Hackathon>((o, h) => o.HackathonId == h.Id)
            .Where(o => o.UserId == userId)
            .Select((o, h) => h)
            .ToListAsync();
    }

}