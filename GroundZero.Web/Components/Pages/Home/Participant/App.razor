@page "/home/participant"
@using GroundZero.Web.Authentication
@using GroundZero.Web.Entities
@using Microsoft.AspNetCore.Authorization
@using SqlSugar

@attribute [Authorize]
@attribute [StreamRendering]

@inject ISqlSugarClient SqlSugar
@inject IHttpContextAccessor HttpContextAccessor

<PageTitle>GroundZero | Hackathons</PageTitle>

<div class="d-flex justify-content-between align-items-center">
    <h5 class="m-0">Your hackathons</h5>

    <div>
        <a class="btn btn-primary" href="/home/organizer/hackathons/new" role="button">New</a>
    </div>
</div>

<br/>

<table class="table">
    <thead>
    <tr>
        <th scope="col">Code</th>
        <th scope="col">Name</th>
        <th scope="col">Start</th>
        <th scope="col">End</th>
        <th scope="col">Website</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var hack in Hackathons)
    {
        <tr>
            <td>
                <a href="/home/organizer/hackathons/@hack.Id">
                    @hack.ShortCode
                </a>
            </td>
            
            <td>
                @hack.Name
            </td>

            <td>
                @hack.EventStartDate.Date.ToShortDateString()
            </td>

            <td>
                @hack.EventEndDate.Date.ToShortDateString()
            </td>

            <td>
                @hack.HomepageUri
            </td>
        </tr>
    }
    </tbody>
</table>

@code {

    private List<Hackathon> Hackathons { get; set; } = [];

    protected override async Task OnInitializedAsync()
    {
        var userId = HttpContextAccessor.HttpContext!.User.GetUserId();
        
        Hackathons = await SqlSugar.Queryable<Organizer>()
            .LeftJoin<Hackathon>((o, h) => o.HackathonId == h.Id)
            .Where(o => o.UserId == userId)
            .Select((o, h) => h)
            .ToListAsync();
    }

}